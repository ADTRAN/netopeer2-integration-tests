diff --git a/src/main.c b/src/main.c
index 6ebe6bc..4067490 100644
--- a/src/main.c
+++ b/src/main.c
@@ -279,6 +279,7 @@ np2srv_err_reply_sr(const sr_error_info_t *err_info)
     struct nc_server_reply *reply = NULL;
     struct lyd_node *e;
     const struct ly_ctx *ly_ctx;
+    const char *msg;
     size_t i;
 
     /* try to find a NETCONF error */
@@ -300,9 +301,25 @@ np2srv_err_reply_sr(const sr_error_info_t *err_info)
 
     ly_ctx = sr_acquire_context(np2srv.sr_conn);
     for (i = 0; i < err_info->err_count; ++i) {
-        /* generic error */
-        e = nc_err(ly_ctx, NC_ERR_OP_FAILED, NC_ERR_TYPE_APP);
-        nc_err_set_msg(e, err_info->err[i].message, "en");
+        /* avoid generic error */
+        msg = err_info->err[i].message;
+        if (strstr(msg, "to be created already exists.")) {
+            e = nc_err(ly_ctx, NC_ERR_DATA_EXISTS, NC_ERR_TYPE_APP);
+        }
+        else if (strstr(msg, "to be deleted does not exist.")) {
+            e = nc_err(ly_ctx, NC_ERR_DATA_MISSING, NC_ERR_TYPE_APP);
+        }
+        else if (strstr(msg, "does not satisfy required constraints.")) {
+            e = nc_err(ly_ctx, NC_ERR_INVALID_VALUE, NC_ERR_TYPE_APP);
+        }
+        else if (strstr(msg, "Opaque (invalid) node")) {
+            e = nc_err(ly_ctx, NC_ERR_UNKNOWN_ELEM, NC_ERR_TYPE_APP);
+        }
+        else {
+            /* generic error */
+            e = nc_err(ly_ctx, NC_ERR_OP_FAILED, NC_ERR_TYPE_APP);
+        }
+        nc_err_set_msg(e, msg, "en");
 
         if (reply) {
             nc_server_reply_add_err(reply, e);
